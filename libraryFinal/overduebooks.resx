<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>